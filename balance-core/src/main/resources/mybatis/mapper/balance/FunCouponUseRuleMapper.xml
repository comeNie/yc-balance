<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.balance.dao.mapper.interfaces.FunCouponUseRuleMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.balance.dao.mapper.bo.FunCouponUseRule" >
    <id column="COUPON_USER_ID" property="couponUserId" jdbcType="VARCHAR" />
    <result column="FACE_VALUE" property="faceValue" jdbcType="INTEGER" />
    <result column="REQUIRED_MONEY_AMOUNT" property="requiredMoneyAmount" jdbcType="INTEGER" />
    <result column="CURRENCY_UNIT" property="currencyUnit" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    COUPON_USER_ID, FACE_VALUE, REQUIRED_MONEY_AMOUNT, CURRENCY_UNIT, CREATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.balance.dao.mapper.bo.FunCouponUseRuleCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from fun_coupon_use_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fun_coupon_use_rule
    where COUPON_USER_ID = #{couponUserId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from fun_coupon_use_rule
    where COUPON_USER_ID = #{couponUserId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.balance.dao.mapper.bo.FunCouponUseRuleCriteria" >
    delete from fun_coupon_use_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.balance.dao.mapper.bo.FunCouponUseRule" >
    insert into fun_coupon_use_rule (COUPON_USER_ID, FACE_VALUE, REQUIRED_MONEY_AMOUNT, 
      CURRENCY_UNIT, CREATE_TIME)
    values (#{couponUserId,jdbcType=VARCHAR}, #{faceValue,jdbcType=INTEGER}, #{requiredMoneyAmount,jdbcType=INTEGER}, 
      #{currencyUnit,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.balance.dao.mapper.bo.FunCouponUseRule" >
    insert into fun_coupon_use_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="couponUserId != null" >
        COUPON_USER_ID,
      </if>
      <if test="faceValue != null" >
        FACE_VALUE,
      </if>
      <if test="requiredMoneyAmount != null" >
        REQUIRED_MONEY_AMOUNT,
      </if>
      <if test="currencyUnit != null" >
        CURRENCY_UNIT,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="couponUserId != null" >
        #{couponUserId,jdbcType=VARCHAR},
      </if>
      <if test="faceValue != null" >
        #{faceValue,jdbcType=INTEGER},
      </if>
      <if test="requiredMoneyAmount != null" >
        #{requiredMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="currencyUnit != null" >
        #{currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.balance.dao.mapper.bo.FunCouponUseRuleCriteria" resultType="java.lang.Integer" >
    select count(*) from fun_coupon_use_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fun_coupon_use_rule
    <set >
      <if test="record.couponUserId != null" >
        COUPON_USER_ID = #{record.couponUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.faceValue != null" >
        FACE_VALUE = #{record.faceValue,jdbcType=INTEGER},
      </if>
      <if test="record.requiredMoneyAmount != null" >
        REQUIRED_MONEY_AMOUNT = #{record.requiredMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="record.currencyUnit != null" >
        CURRENCY_UNIT = #{record.currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fun_coupon_use_rule
    set COUPON_USER_ID = #{record.couponUserId,jdbcType=VARCHAR},
      FACE_VALUE = #{record.faceValue,jdbcType=INTEGER},
      REQUIRED_MONEY_AMOUNT = #{record.requiredMoneyAmount,jdbcType=INTEGER},
      CURRENCY_UNIT = #{record.currencyUnit,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.balance.dao.mapper.bo.FunCouponUseRule" >
    update fun_coupon_use_rule
    <set >
      <if test="faceValue != null" >
        FACE_VALUE = #{faceValue,jdbcType=INTEGER},
      </if>
      <if test="requiredMoneyAmount != null" >
        REQUIRED_MONEY_AMOUNT = #{requiredMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="currencyUnit != null" >
        CURRENCY_UNIT = #{currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where COUPON_USER_ID = #{couponUserId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.balance.dao.mapper.bo.FunCouponUseRule" >
    update fun_coupon_use_rule
    set FACE_VALUE = #{faceValue,jdbcType=INTEGER},
      REQUIRED_MONEY_AMOUNT = #{requiredMoneyAmount,jdbcType=INTEGER},
      CURRENCY_UNIT = #{currencyUnit,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where COUPON_USER_ID = #{couponUserId,jdbcType=VARCHAR}
  </update>
</mapper>