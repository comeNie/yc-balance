<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.balance.dao.mapper.interfaces.FunActivityMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.balance.dao.mapper.bo.FunActivity" >
    <id column="ACTIVITY_ID" property="activityId" jdbcType="INTEGER" />
    <result column="ACTIVITY_NAME" property="activityName" jdbcType="VARCHAR" />
    <result column="activity_desc" property="activityDesc" jdbcType="VARCHAR" />
    <result column="used_scene" property="usedScene" jdbcType="VARCHAR" />
    <result column="CURRENCY_UNIT" property="currencyUnit" jdbcType="VARCHAR" />
    <result column="TOTAL_MONEY_AMOUNT" property="totalMoneyAmount" jdbcType="INTEGER" />
    <result column="REMAINING_MONEY_AMOUNT" property="remainingMoneyAmount" jdbcType="INTEGER" />
    <result column="START_ TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="END_ TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="CREATE_STAFF" property="createStaff" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ACTIVITY_ID, ACTIVITY_NAME, activity_desc, used_scene, CURRENCY_UNIT, TOTAL_MONEY_AMOUNT, 
    REMAINING_MONEY_AMOUNT, "START_ TIME", "END_ TIME", STATUS, CREATE_STAFF, CREATE_TIME, 
    UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.balance.dao.mapper.bo.FunActivityCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from fun_activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer" >
    select 
    <include refid="Base_Column_List" />
    from fun_activity
    where ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer" >
    delete from fun_activity
    where ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.balance.dao.mapper.bo.FunActivityCriteria" >
    delete from fun_activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.balance.dao.mapper.bo.FunActivity" >
    insert into fun_activity (ACTIVITY_ID, ACTIVITY_NAME, activity_desc, 
      used_scene, CURRENCY_UNIT, TOTAL_MONEY_AMOUNT, 
      REMAINING_MONEY_AMOUNT, "START_ TIME", "END_ TIME", 
      STATUS, CREATE_STAFF, CREATE_TIME, 
      UPDATE_TIME)
    values (#{activityId,jdbcType=INTEGER}, #{activityName,jdbcType=VARCHAR}, #{activityDesc,jdbcType=VARCHAR}, 
      #{usedScene,jdbcType=VARCHAR}, #{currencyUnit,jdbcType=VARCHAR}, #{totalMoneyAmount,jdbcType=INTEGER}, 
      #{remainingMoneyAmount,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{createStaff,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.balance.dao.mapper.bo.FunActivity" >
    insert into fun_activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activityId != null" >
        ACTIVITY_ID,
      </if>
      <if test="activityName != null" >
        ACTIVITY_NAME,
      </if>
      <if test="activityDesc != null" >
        activity_desc,
      </if>
      <if test="usedScene != null" >
        used_scene,
      </if>
      <if test="currencyUnit != null" >
        CURRENCY_UNIT,
      </if>
      <if test="totalMoneyAmount != null" >
        TOTAL_MONEY_AMOUNT,
      </if>
      <if test="remainingMoneyAmount != null" >
        REMAINING_MONEY_AMOUNT,
      </if>
      <if test="startTime != null" >
        "START_ TIME",
      </if>
      <if test="endTime != null" >
        "END_ TIME",
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="activityName != null" >
        #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="activityDesc != null" >
        #{activityDesc,jdbcType=VARCHAR},
      </if>
      <if test="usedScene != null" >
        #{usedScene,jdbcType=VARCHAR},
      </if>
      <if test="currencyUnit != null" >
        #{currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="totalMoneyAmount != null" >
        #{totalMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="remainingMoneyAmount != null" >
        #{remainingMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.balance.dao.mapper.bo.FunActivityCriteria" resultType="java.lang.Integer" >
    select count(*) from fun_activity
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fun_activity
    <set >
      <if test="record.activityId != null" >
        ACTIVITY_ID = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.activityName != null" >
        ACTIVITY_NAME = #{record.activityName,jdbcType=VARCHAR},
      </if>
      <if test="record.activityDesc != null" >
        activity_desc = #{record.activityDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.usedScene != null" >
        used_scene = #{record.usedScene,jdbcType=VARCHAR},
      </if>
      <if test="record.currencyUnit != null" >
        CURRENCY_UNIT = #{record.currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.totalMoneyAmount != null" >
        TOTAL_MONEY_AMOUNT = #{record.totalMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="record.remainingMoneyAmount != null" >
        REMAINING_MONEY_AMOUNT = #{record.remainingMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        "START_ TIME" = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        "END_ TIME" = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createStaff != null" >
        CREATE_STAFF = #{record.createStaff,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fun_activity
    set ACTIVITY_ID = #{record.activityId,jdbcType=INTEGER},
      ACTIVITY_NAME = #{record.activityName,jdbcType=VARCHAR},
      activity_desc = #{record.activityDesc,jdbcType=VARCHAR},
      used_scene = #{record.usedScene,jdbcType=VARCHAR},
      CURRENCY_UNIT = #{record.currencyUnit,jdbcType=VARCHAR},
      TOTAL_MONEY_AMOUNT = #{record.totalMoneyAmount,jdbcType=INTEGER},
      REMAINING_MONEY_AMOUNT = #{record.remainingMoneyAmount,jdbcType=INTEGER},
      "START_ TIME" = #{record.startTime,jdbcType=TIMESTAMP},
      "END_ TIME" = #{record.endTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=VARCHAR},
      CREATE_STAFF = #{record.createStaff,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.balance.dao.mapper.bo.FunActivity" >
    update fun_activity
    <set >
      <if test="activityName != null" >
        ACTIVITY_NAME = #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="activityDesc != null" >
        activity_desc = #{activityDesc,jdbcType=VARCHAR},
      </if>
      <if test="usedScene != null" >
        used_scene = #{usedScene,jdbcType=VARCHAR},
      </if>
      <if test="currencyUnit != null" >
        CURRENCY_UNIT = #{currencyUnit,jdbcType=VARCHAR},
      </if>
      <if test="totalMoneyAmount != null" >
        TOTAL_MONEY_AMOUNT = #{totalMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="remainingMoneyAmount != null" >
        REMAINING_MONEY_AMOUNT = #{remainingMoneyAmount,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        "START_ TIME" = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        "END_ TIME" = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createStaff != null" >
        CREATE_STAFF = #{createStaff,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.balance.dao.mapper.bo.FunActivity" >
    update fun_activity
    set ACTIVITY_NAME = #{activityName,jdbcType=VARCHAR},
      activity_desc = #{activityDesc,jdbcType=VARCHAR},
      used_scene = #{usedScene,jdbcType=VARCHAR},
      CURRENCY_UNIT = #{currencyUnit,jdbcType=VARCHAR},
      TOTAL_MONEY_AMOUNT = #{totalMoneyAmount,jdbcType=INTEGER},
      REMAINING_MONEY_AMOUNT = #{remainingMoneyAmount,jdbcType=INTEGER},
      "START_ TIME" = #{startTime,jdbcType=TIMESTAMP},
      "END_ TIME" = #{endTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      CREATE_STAFF = #{createStaff,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ACTIVITY_ID = #{activityId,jdbcType=INTEGER}
  </update>
</mapper>